{"version":3,"file":"aiExerciseService-C8i7KRHj.js","sources":["../../src/services/aiExerciseService.ts"],"sourcesContent":["import { deepSeekApiService } from './deepseekApi';\r\n\r\n// Types for AI Exercise Evaluation\r\nexport interface ExerciseEvaluationOptions {\r\n  exerciseId: string;\r\n  exerciseTitle: string;\r\n  exerciseDescription: string;\r\n  expectedAnswer?: string;\r\n  evaluationCriteria?: string[];\r\n}\r\n\r\nexport interface ExerciseEvaluationResult {\r\n  isCorrect: boolean;\r\n  score: number; // 0-100\r\n  feedback: string;\r\n  suggestions: string[];\r\n  strengths: string[];\r\n  improvements: string[];\r\n}\r\n\r\nclass AIExerciseService {\r\n  /**\r\n   * Evaluates a text answer using AI\r\n   */\r\n  async evaluateTextAnswer(\r\n    userAnswer: string,\r\n    options: ExerciseEvaluationOptions\r\n  ): Promise<ExerciseEvaluationResult> {\r\n    console.log('ü§ñ Starting AI evaluation of text answer...');\r\n    console.log('üìù User answer length:', userAnswer.length);\r\n    console.log('üéØ Exercise:', options.exerciseTitle);\r\n\r\n    try {\r\n      const prompt = this.createEvaluationPrompt(userAnswer, options);\r\n      console.log('üìù Created evaluation prompt');\r\n\r\n      const aiResponse = await deepSeekApiService.chatCompletion([\r\n        { role: 'system', content: prompt.system },\r\n        { role: 'user', content: prompt.user }\r\n      ], {\r\n        temperature: 0.3, // Lower temperature for more consistent evaluation\r\n        maxTokens: 2000,\r\n      });\r\n\r\n      console.log('‚úÖ Received AI evaluation:', aiResponse);\r\n      \r\n      const evaluation = this.parseEvaluationResponse(aiResponse);\r\n      console.log('üîÑ Parsed evaluation result:', evaluation);\r\n      \r\n      return evaluation;\r\n    } catch (error) {\r\n      console.error('‚ùå AI evaluation failed:', error);\r\n      throw new Error(`AI evaluation failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates evaluation prompt for AI\r\n   */\r\n  private createEvaluationPrompt(\r\n    userAnswer: string,\r\n    options: ExerciseEvaluationOptions\r\n  ): { system: string; user: string } {\r\n    const systemPrompt = `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç-–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ —É—á–µ–±–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è. \r\n\r\n–¢–≤–æ—è –∑–∞–¥–∞—á–∞:\r\n1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ª–Ω–æ—Ç—ã\r\n2. –î–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å\r\n3. –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏—è\r\n4. –í—ã—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –æ—Ç 0 –¥–æ 100\r\n\r\n–ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏:\r\n- –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ (40%)\r\n- –ü–æ–ª–Ω–æ—Ç–∞ –∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è (30%)\r\n- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∏ –ª–æ–≥–∏–∫–∞ (20%)\r\n- –ö–∞—á–µ—Å—Ç–≤–æ –∏–∑–ª–æ–∂–µ–Ω–∏—è (10%)\r\n\r\n–û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:\r\n{\r\n  \"isCorrect\": boolean,\r\n  \"score\": number (0-100),\r\n  \"feedback\": \"–ø–æ–¥—Ä–æ–±–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ\",\r\n  \"suggestions\": [\"–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ 1\", \"–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ 2\"],\r\n  \"strengths\": [\"—Å–∏–ª—å–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ 1\", \"—Å–∏–ª—å–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ 2\"],\r\n  \"improvements\": [\"—á—Ç–æ —É–ª—É—á—à–∏—Ç—å 1\", \"—á—Ç–æ —É–ª—É—á—à–∏—Ç—å 2\"]\r\n}`;\r\n\r\n    const userPrompt = `–ó–∞–¥–∞–Ω–∏–µ: ${options.exerciseTitle}\r\n\r\n–û–ø–∏—Å–∞–Ω–∏–µ: ${options.exerciseDescription}\r\n\r\n${options.expectedAnswer ? `–û–∂–∏–¥–∞–µ–º—ã–π –æ—Ç–≤–µ—Ç: ${options.expectedAnswer}` : ''}\r\n\r\n${options.evaluationCriteria ? `–ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏: ${options.evaluationCriteria.join(', ')}` : ''}\r\n\r\n–û—Ç–≤–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞: \"${userAnswer}\"\r\n\r\n–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ—Ç–≤–µ—Ç –∏ –¥–∞–π –æ—Ü–µ–Ω–∫—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º JSON —Ñ–æ—Ä–º–∞—Ç–µ.`;\r\n\r\n    return { system: systemPrompt, user: userPrompt };\r\n  }\r\n\r\n  /**\r\n   * Parses AI response to evaluation result\r\n   */\r\n  private parseEvaluationResponse(response: string): ExerciseEvaluationResult {\r\n    try {\r\n      // Try to extract JSON from markdown code block first\r\n      const jsonMatch = response.match(/```json\\s*([\\s\\S]*?)\\s*```/);\r\n      if (jsonMatch) {\r\n        const parsed = JSON.parse(jsonMatch[1].trim());\r\n        return this.normalizeEvaluationResult(parsed);\r\n      }\r\n      \r\n      // Try to find JSON without markdown\r\n      const jsonStart = response.indexOf('{');\r\n      if (jsonStart !== -1) {\r\n        const jsonEnd = response.lastIndexOf('}');\r\n        if (jsonEnd !== -1 && jsonEnd > jsonStart) {\r\n          const jsonString = response.substring(jsonStart, jsonEnd + 1);\r\n          const parsed = JSON.parse(jsonString);\r\n          return this.normalizeEvaluationResult(parsed);\r\n        }\r\n      }\r\n      \r\n      // Try to parse as direct JSON\r\n      const parsed = JSON.parse(response);\r\n      return this.normalizeEvaluationResult(parsed);\r\n    } catch (error) {\r\n      console.error('‚ùå Failed to parse evaluation response:', error);\r\n      \r\n      // Fallback response\r\n      return {\r\n        isCorrect: false,\r\n        score: 0,\r\n        feedback: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',\r\n        suggestions: ['–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞'],\r\n        strengths: [],\r\n        improvements: ['–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–¥–∞–Ω–∏—é']\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Normalizes evaluation result to ensure it matches expected format\r\n   */\r\n  private normalizeEvaluationResult(result: any): ExerciseEvaluationResult {\r\n    return {\r\n      isCorrect: Boolean(result.isCorrect),\r\n      score: Math.max(0, Math.min(100, Number(result.score) || 0)),\r\n      feedback: String(result.feedback || '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'),\r\n      suggestions: Array.isArray(result.suggestions) ? result.suggestions : [],\r\n      strengths: Array.isArray(result.strengths) ? result.strengths : [],\r\n      improvements: Array.isArray(result.improvements) ? result.improvements : []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generates a hint for the exercise\r\n   */\r\n  async generateHint(\r\n    exerciseTitle: string,\r\n    exerciseDescription: string,\r\n    userAnswer?: string\r\n  ): Promise<string> {\r\n    console.log('üí° Generating AI hint...');\r\n\r\n    try {\r\n      const prompt = `–¢—ã - –ø–æ–º–æ—â–Ω–∏–∫-–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å. –î–∞–π –ø–æ–ª–µ–∑–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è –∑–∞–¥–∞–Ω–∏—è.\r\n\r\n–ó–∞–¥–∞–Ω–∏–µ: ${exerciseTitle}\r\n–û–ø–∏—Å–∞–Ω–∏–µ: ${exerciseDescription}\r\n\r\n${userAnswer ? `–¢–µ–∫—É—â–∏–π –æ—Ç–≤–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞: \"${userAnswer}\"` : ''}\r\n\r\n–î–∞–π –ø–æ–¥—Å–∫–∞–∑–∫—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç—É, –Ω–æ –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –∏ –Ω–µ –±–æ–ª–µ–µ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.`;\r\n\r\n      const hint = await deepSeekApiService.chatCompletion([\r\n        { role: 'user', content: prompt }\r\n      ], {\r\n        temperature: 0.7,\r\n        maxTokens: 200,\r\n      });\r\n\r\n      return hint.trim();\r\n    } catch (error) {\r\n      console.error('‚ùå Failed to generate hint:', error);\r\n      return '–ü–æ–¥—Å–∫–∞–∑–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';\r\n    }\r\n  }\r\n}\r\n\r\nexport const aiExerciseService = new AIExerciseService();\r\n"],"names":["AIExerciseService","userAnswer","options","prompt","aiResponse","deepSeekApiService","evaluation","error","systemPrompt","userPrompt","response","jsonMatch","parsed","jsonStart","jsonEnd","jsonString","result","exerciseTitle","exerciseDescription","aiExerciseService"],"mappings":"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"}