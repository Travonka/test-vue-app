var i=Object.defineProperty;var p=(r,o,s)=>o in r?i(r,o,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[o]=s;var c=(r,o,s)=>p(r,typeof o!="symbol"?o+"":o,s);const l={API_URL:"https://api.deepseek.com/v1/chat/completions",MODEL:"deepseek-chat",TIMEOUT:3e4},u=()=>{const r="sk-283284a890f8466099f2bb90d5329fbc";return console.log("‚úÖ DeepSeek API key loaded:",r),r},d=()=>({"Content-Type":"application/json",Authorization:`Bearer ${u()}`});class m{constructor(){c(this,"baseUrl",l.API_URL);c(this,"model",l.MODEL);c(this,"timeout",l.TIMEOUT)}isConfigured(){return!0}async makeRequest(o){console.log("üåê Making request to DeepSeek API..."),console.log("üì° API URL:",this.baseUrl),console.log("ü§ñ Model:",this.model);const s=new AbortController,t=setTimeout(()=>s.abort(),this.timeout);try{console.log("üì§ Sending request to DeepSeek...");const e=await fetch(this.baseUrl,{method:"POST",headers:d(),body:JSON.stringify(o),signal:s.signal});if(clearTimeout(t),console.log("üì• Received response from DeepSeek:",e.status,e.statusText),!e.ok){const a=await e.json();throw console.error("‚ùå DeepSeek API Error:",a),new Error(`DeepSeek API Error: ${a.error.message}`)}const n=await e.json();return console.log("‚úÖ Successfully received data from DeepSeek"),console.log("üìä Response usage:",n.usage),n}catch(e){throw clearTimeout(t),console.error("‚ùå DeepSeek API request failed:",e),e instanceof Error?e.name==="AbortError"?new Error("Request timeout. Please try again."):e:new Error("Unknown error occurred while calling DeepSeek API")}}async chatCompletion(o,s={}){const t={model:this.model,messages:o,temperature:s.temperature||.7,max_tokens:s.maxTokens||4e3,stream:!1},e=await this.makeRequest(t);if(e.choices&&e.choices.length>0)return e.choices[0].message.content;throw new Error("No response from DeepSeek API")}parseJsonResponse(o){const s=o.match(/```json\s*([\s\S]*?)\s*```/);if(s){console.log("üîç Found JSON in markdown block:",s[1]);try{const e=s[1].trim(),n=JSON.parse(e);return console.log("‚úÖ Successfully parsed JSON from markdown block"),n}catch(e){console.error("‚ùå Failed to parse JSON from markdown block:",e)}}const t=o.indexOf("{");if(t!==-1){const e=o.lastIndexOf("}");if(e!==-1&&e>t){const n=o.substring(t,e+1);console.log("üîç Found JSON without markdown:",n);try{const a=JSON.parse(n);return console.log("‚úÖ Successfully parsed JSON without markdown"),a}catch(a){console.error("‚ùå Failed to parse JSON without markdown:",a)}}}try{const e=JSON.parse(o);return console.log("‚úÖ Successfully parsed direct JSON"),e}catch(e){console.warn("‚ùå Failed to parse as direct JSON:",e)}throw new Error("Failed to parse AI response as JSON. Response: "+o.substring(0,500)+"...")}async analyzeResume(o){const s=[{role:"system",content:o.system},{role:"user",content:o.user}],t=await this.chatCompletion(s,{temperature:.3,maxTokens:3e3});return console.log("üì• Raw response from DeepSeek:",t),this.parseJsonResponse(t)}async testConnection(){try{const o=[{role:"system",content:"–¢—ã - –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API."},{role:"user",content:'–û—Ç–≤–µ—Ç—å "API —Ä–∞–±–æ—Ç–∞–µ—Ç" –µ—Å–ª–∏ —Ç—ã –ø–æ–ª—É—á–∏–ª —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.'}],s=await this.chatCompletion(o,{temperature:.1,maxTokens:50});return s.includes("API —Ä–∞–±–æ—Ç–∞–µ—Ç")||s.includes("—Ä–∞–±–æ—Ç–∞–µ—Ç")}catch(o){return console.error("DeepSeek API connection test failed:",o),!1}}async getUsageStats(){return null}}const h=new m;export{h as d};
//# sourceMappingURL=deepseekApi-BbGClSq_.js.map
